// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  email    String @unique
  name     String
  password String

  characters Character[]
}

model Character {
  id        Int    @id @default(autoincrement())
  name      String
  birthdate Int
  story     String

  user   User @relation(fields: [userId], references: [id])
  userId Int

  skill  SkillsOnCharacters[]
  thread CharactersOnThreads[]
  posts  Post[]
}

model Skill {
  id          Int    @id @default(autoincrement())
  name        String
  description String

  skill SkillsOnCharacters[]
}

model SkillsOnCharacters {
  id    Int @id @default(autoincrement())
  level Int

  character   Character @relation(fields: [characterId], references: [id])
  characterId Int

  skill   Skill @relation(fields: [skillId], references: [id])
  skillId Int
}

model Thread {
  id        Int          @id @default(autoincrement())
  title     String
  safeTitle String
  status    ThreadStatus @default(INITIATED)
  era       String?      @db.VarChar(255)
  location  String?      @db.VarChar(255)
  thumbnail String?      @db.VarChar(255)

  posts      Post[]
  characters CharactersOnThreads[]
}

model CharactersOnThreads {
  id Int @id @default(autoincrement())

  character   Character @relation(fields: [characterId], references: [id])
  characterId Int

  thread   Thread @relation(fields: [threadId], references: [id])
  threadId Int
}

enum ThreadStatus {
  INITIATED
  IN_PROGRESS
  FINISHED
  LOCKED
}

model Post {
  id      Int    @id @default(autoincrement())
  content String

  thread   Thread @relation(fields: [threadId], references: [id])
  threadId Int

  character   Character @relation(fields: [characterId], references: [id])
  characterId Int
}
