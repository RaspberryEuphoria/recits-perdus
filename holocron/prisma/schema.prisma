// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  email    String @unique @db.VarChar(255)
  name     String @db.VarChar(255)
  password String

  characters Character[]
}

model Character {
  id        Int    @id @default(autoincrement())
  name      String @db.VarChar(255)
  birthdate Int
  story     String

  user   User @relation(fields: [userId], references: [id])
  userId Int

  skill    SkillsOnCharacters[]
  scenario CharactersOnScenarios[]
  posts    Post[]
}

model Skill {
  id          Int    @id @default(autoincrement())
  name        String @db.VarChar(255)
  description String

  skill SkillsOnCharacters[]
}

model SkillsOnCharacters {
  id    Int @id @default(autoincrement())
  level Int

  character   Character @relation(fields: [characterId], references: [id])
  characterId Int

  skill   Skill @relation(fields: [skillId], references: [id])
  skillId Int
}

model Scenario {
  id           Int            @id @default(autoincrement())
  title        String         @db.VarChar(255)
  safeTitle    String         @db.VarChar(255)
  status       ScenarioStatus @default(INITIATED)
  era          String?        @db.VarChar(255)
  location     String?        @db.VarChar(255)
  thumbnail    String?        @db.VarChar(255)
  introduction String         @db.VarChar(500)

  posts      Post[]
  characters CharactersOnScenarios[]
}

model CharactersOnScenarios {
  id Int @id @default(autoincrement())

  character   Character @relation(fields: [characterId], references: [id])
  characterId Int

  scenario   Scenario @relation(fields: [scenarioId], references: [id])
  scenarioId Int
}

enum ScenarioStatus {
  INITIATED
  IN_PROGRESS
  FINISHED
  LOCKED
}

model Post {
  id      Int    @id @default(autoincrement())
  content String
  isGameMaster Boolean @default(false)

  scenario   Scenario @relation(fields: [scenarioId], references: [id])
  scenarioId Int

  character   Character @relation(fields: [characterId], references: [id])
  characterId Int
}
